/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UI;

import costominimo.CostoMinimo;
import costominimo.CrearTablaTransporte;
import costominimo.Datos;
import costominimo.GuardarTransporte;
import costominimo.RssFeedCellRender;
import java.awt.Color;
import javax.swing.JOptionPane;
import static javax.swing.JOptionPane.QUESTION_MESSAGE;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.JTableHeader;
import javax.swing.table.TableColumn;
import javax.swing.table.TableColumnModel;



public class CostoMinimoUI extends javax.swing.JFrame {

    // atributos
    
    public static int destinos = 0;
    public static int origenes;
    public static DefaultTableModel restricciones = null;
    public static DefaultTableModel solucion = null;      //probar sino funciona con private
    public static int extraRow = 0;
    public static int extraColumn = 0;
    public boolean artificialFila = false;
    public boolean artificialColumna = false;
    double demanda = 0;
    double oferta = 0;
    public static boolean corte = true;
    public static String numerosRepetidos;
    boolean guardar;
    
    
    //instanciaciones
    public static Datos datos[][];
    CrearTablaTransporte ct = new CrearTablaTransporte();
    CostoMinimo minimo;
    GuardarTransporte guarda;
    RssFeedCellRender Renderizar = new RssFeedCellRender ();
           
    
    
    //constructor        
    public CostoMinimoUI() {
        initComponents();
        this.setBounds(150,150,996,444);
        tb_solucion.setDefaultRenderer(Object.class, Renderizar);
        tb_solucion.setRowHeight(50);
        tb_restricciones.setRowHeight(25);
        tb_resultados.setRowHeight(25);
        destinos = Integer.parseInt(""+sp_destino.getValue());
        origenes = Integer.parseInt(""+sp_origen.getValue());
        
        new CrearTablaTransporte().CrearTablaRestricciones(destinos, origenes, tb_restricciones, 0);
        vRelleno.setBounds(450, 20, 550, 725);
       
        
        JTableHeader th;
        th = tb_restricciones.getTableHeader();
        th.setForeground(Color.red);
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        vRelleno = new javax.swing.JFrame();
        bt_terminar = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        sp_destino = new javax.swing.JSpinner();
        sp_origen = new javax.swing.JSpinner();
        bt_ok = new javax.swing.JButton();
        lb_titulo = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        ck_origen = new javax.swing.JCheckBox();
        ck_destino = new javax.swing.JCheckBox();
        bt_igualar = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane5 = new javax.swing.JScrollPane();
        tb_restricciones = new javax.swing.JTable();
        info2 = new javax.swing.JLabel();
        pn_bck = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tb_solucion = new javax.swing.JTable();
        bt_rellenar = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tb_resultados = new javax.swing.JTable();
        bt_resolver = new javax.swing.JButton();
        bt_pap = new javax.swing.JButton();
        bt_salir = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        lb_solucion = new javax.swing.JLabel();
        txt_solucion = new javax.swing.JTextField();
        lb_estado = new javax.swing.JLabel();
        BarraMenu = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenu2 = new javax.swing.JMenu();

        vRelleno.setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        vRelleno.setTitle("Metodos de transporte | Costo Minimo");

        bt_terminar.setText("Listo");
        bt_terminar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                bt_terminarMousePressed(evt);
            }
        });
        bt_terminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_terminarActionPerformed(evt);
            }
        });

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Origen / Destino"));

        jLabel5.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        jLabel5.setText("Por favor indica la cantidad de destinos y origenes.");

        jLabel6.setText("Destino");

        jLabel3.setText("Origen");

        sp_origen.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                sp_origenStateChanged(evt);
            }
        });

        bt_ok.setText("OK");
        bt_ok.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_okActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(sp_destino, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(61, 61, 61)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(sp_origen, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(61, 61, 61)
                        .addComponent(bt_ok)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel5)
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(jLabel3)
                    .addComponent(sp_destino, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(sp_origen, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bt_ok))
                .addContainerGap(28, Short.MAX_VALUE))
        );

        lb_titulo.setFont(new java.awt.Font("Tw Cen MT Condensed", 1, 24)); // NOI18N
        lb_titulo.setText("Coeficientes | Costo Minimo");

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Variables artificiales"));

        ck_origen.setText("Origen");
        ck_origen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ck_origenActionPerformed(evt);
            }
        });

        ck_destino.setText("Destino");
        ck_destino.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ck_destinoActionPerformed(evt);
            }
        });

        bt_igualar.setText("Igualar");
        bt_igualar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_igualarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(ck_origen)
                .addGap(75, 75, 75)
                .addComponent(ck_destino)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(bt_igualar)
                .addGap(55, 55, 55))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(38, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ck_origen)
                    .addComponent(ck_destino)
                    .addComponent(bt_igualar))
                .addGap(31, 31, 31))
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("Coeficientes del problema"));

        tb_restricciones.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        tb_restricciones.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                tb_restriccionesKeyTyped(evt);
            }
        });
        jScrollPane5.setViewportView(tb_restricciones);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 221, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(214, 214, 214))
        );

        info2.setFont(new java.awt.Font("Tw Cen MT Condensed", 0, 18)); // NOI18N
        info2.setForeground(new java.awt.Color(255, 51, 51));

        javax.swing.GroupLayout vRellenoLayout = new javax.swing.GroupLayout(vRelleno.getContentPane());
        vRelleno.getContentPane().setLayout(vRellenoLayout);
        vRellenoLayout.setHorizontalGroup(
            vRellenoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(vRellenoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(vRellenoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(vRellenoLayout.createSequentialGroup()
                        .addComponent(lb_titulo)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, vRellenoLayout.createSequentialGroup()
                        .addComponent(info2, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(bt_terminar)))
                .addContainerGap())
        );
        vRellenoLayout.setVerticalGroup(
            vRellenoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(vRellenoLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lb_titulo)
                .addGap(18, 18, 18)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, 276, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(vRellenoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(vRellenoLayout.createSequentialGroup()
                        .addComponent(bt_terminar)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(info2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Metodos de transporte | Costo Minimo");

        jLabel1.setText("Modelo");

        tb_solucion.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane1.setViewportView(tb_solucion);

        bt_rellenar.setText("Rellenar");
        bt_rellenar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_rellenarActionPerformed(evt);
            }
        });

        tb_resultados.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Origen", "Destino", "Materiales", "Subtotal"
            }
        ));
        jScrollPane2.setViewportView(tb_resultados);

        bt_resolver.setText("Resolver");
        bt_resolver.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_resolverActionPerformed(evt);
            }
        });

        bt_pap.setText("Solucion paso a paso");
        bt_pap.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_papActionPerformed(evt);
            }
        });

        bt_salir.setText("Salir");
        bt_salir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_salirActionPerformed(evt);
            }
        });

        jLabel2.setText("Procedimiento");

        lb_solucion.setText("Solucion para Z:");

        lb_estado.setText("Estado:");

        javax.swing.GroupLayout pn_bckLayout = new javax.swing.GroupLayout(pn_bck);
        pn_bck.setLayout(pn_bckLayout);
        pn_bckLayout.setHorizontalGroup(
            pn_bckLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pn_bckLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pn_bckLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pn_bckLayout.createSequentialGroup()
                        .addComponent(lb_estado, javax.swing.GroupLayout.PREFERRED_SIZE, 325, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(pn_bckLayout.createSequentialGroup()
                        .addGroup(pn_bckLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pn_bckLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 594, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(pn_bckLayout.createSequentialGroup()
                                    .addComponent(jLabel1)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(bt_rellenar)))
                            .addGroup(pn_bckLayout.createSequentialGroup()
                                .addComponent(lb_solucion)
                                .addGap(18, 18, 18)
                                .addComponent(txt_solucion, javax.swing.GroupLayout.PREFERRED_SIZE, 216, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)
                        .addGroup(pn_bckLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pn_bckLayout.createSequentialGroup()
                                .addComponent(bt_resolver)
                                .addGap(33, 33, 33)
                                .addComponent(bt_pap)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 28, Short.MAX_VALUE)
                                .addComponent(bt_salir))
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                            .addGroup(pn_bckLayout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addGap(0, 0, Short.MAX_VALUE)))))
                .addContainerGap())
        );
        pn_bckLayout.setVerticalGroup(
            pn_bckLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pn_bckLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pn_bckLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pn_bckLayout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(jLabel1))
                    .addComponent(bt_rellenar)
                    .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pn_bckLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 289, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(pn_bckLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bt_resolver)
                    .addComponent(bt_pap)
                    .addComponent(bt_salir)
                    .addComponent(lb_solucion)
                    .addComponent(txt_solucion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 16, Short.MAX_VALUE)
                .addComponent(lb_estado))
        );

        jMenu1.setText("Archivo");
        BarraMenu.add(jMenu1);

        jMenu2.setText("Acerca de ");
        BarraMenu.add(jMenu2);

        setJMenuBar(BarraMenu);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pn_bck, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(pn_bck, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void bt_resolverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_resolverActionPerformed
        
        boolean fin = false;
        
        corte = false;
        
        while(!fin){
            
            if(minimo.CostoMinimo(tb_solucion)){
                
                lb_estado.setText("Estado: Proceso finalizado con exito.");
                
                enviar();
                
                bt_pap.setEnabled(false);
                bt_resolver.setEnabled(false);
                fin = true;
            }
            
            tb_solucion.setValueAt("", 0, 0);
        }
        
        txt_solucion.setText(""+calcularTotal());
    }//GEN-LAST:event_bt_resolverActionPerformed

    private void bt_salirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_salirActionPerformed
                
        int pregunta = JOptionPane.showConfirmDialog(null, "Estas a punto de salir del programa ¿Estas Seguro?",
                      "Piensalo crack: ¿Realmente deseas hacer esto?",JOptionPane.OK_CANCEL_OPTION,QUESTION_MESSAGE);
            
            if(pregunta == JOptionPane.OK_OPTION){
               System.exit(0);
            }
            
            if(pregunta ==JOptionPane.CANCEL_OPTION){
            //no hara nada, igual que lo que puedes hacer para que ella vuelva a tu lado.
            }
        
    }//GEN-LAST:event_bt_salirActionPerformed

    private void bt_rellenarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_rellenarActionPerformed
        
        vRelleno.setVisible(true);
        
    }//GEN-LAST:event_bt_rellenarActionPerformed

    private void bt_terminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_terminarActionPerformed
        
        boolean respuesta = equilibrarSistema();
        
        if(isNumeric(tb_restricciones) && respuesta){
            
            destinos = Integer.parseInt(""+sp_destino.getValue());
            origenes = Integer.parseInt(""+sp_origen.getValue());
            ct.CrearTablaSolucion(tb_restricciones, tb_solucion, extraRow, extraColumn);
            
            minimo = new CostoMinimo();
            
            vRelleno.setVisible(false);
            bt_pap.setEnabled(true);
            bt_resolver.setEnabled(true);
        }
    }//GEN-LAST:event_bt_terminarActionPerformed

    private void bt_okActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_okActionPerformed
        
        destinos = Integer.parseInt(""+sp_destino.getValue());
        origenes = Integer.parseInt(""+sp_origen.getValue());
        
        new CrearTablaTransporte().CrearTablaRestricciones(destinos, origenes, tb_restricciones, 0);
        
        ck_origen.setSelected(false);
        ck_destino.setSelected(false);
        
        artificialColumna = false;
        artificialFila = false;
        
        info2.setBackground(new Color(240,240,240));
        info2.setText(null);
    }//GEN-LAST:event_bt_okActionPerformed

    private void bt_igualarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_igualarActionPerformed
        
        info2.setBackground(new Color(240,240,240));
        info2.setText(null);
        
            if(artificialColumna){
                
                calcularDemandaOfertaTotal(tb_restricciones,0,1);
                restricciones.setValueAt((oferta-demanda), restricciones.getRowCount()-1, restricciones.getColumnCount()-2);
                
            }
            
            else if(artificialFila){
                
                calcularDemandaOfertaTotal(tb_restricciones,1,0);
                restricciones.setValueAt((oferta-demanda), restricciones.getRowCount()-2, restricciones.getColumnCount()-1);
       
            }
            else calcularDemandaOfertaTotal(tb_restricciones, 0,0);
            
            if(oferta == demanda){
                
                if(artificialFila){
                    
                    eliminaFila();
                    artificialFila=false;
                    ck_origen.setSelected(false);
                }
                else if(artificialColumna){
                    
                    eliminarColumna();
                    artificialColumna = false;
                    ck_destino.setSelected(false);
                }
            }
            else if(oferta != demanda){
                
                if(oferta > demanda && artificialFila){
                    
                    eliminaFila();
                    artificialFila = false;
                    ck_origen.setSelected(false);
                    agregarColumna();
                    artificialColumna = true;
                    ck_destino.setSelected(true);
                }
                
                else if( oferta < demanda && artificialColumna){
                    
                    eliminarColumna();
                    artificialColumna = false;
                    ck_destino.setSelected(false);
                    agregarFila();
                    artificialFila = true;
                    ck_origen.setSelected(true);
                }
                
            }
            
            if(!artificialColumna && !artificialFila){
                
                if(oferta<demanda){
                    
                    agregarFila();
                    artificialFila = true;
                    ck_origen.setSelected(true);
                }
                else if(oferta>demanda){
                    agregarColumna();
                    artificialColumna = true;
                    ck_destino.setSelected(true);
                }
            }
    }//GEN-LAST:event_bt_igualarActionPerformed

    private void tb_restriccionesKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tb_restriccionesKeyTyped
        
        char c = evt.getKeyChar();
        
        if (!Character.isDigit(c) && c != '-' && c != 'E' && c != '.'){
            evt.consume();
        }
    }//GEN-LAST:event_tb_restriccionesKeyTyped

    private void bt_terminarMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bt_terminarMousePressed
        
        info2.setText("Calculando...");
    }//GEN-LAST:event_bt_terminarMousePressed

    private void sp_origenStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_sp_origenStateChanged
        
      
        int fi = Integer.parseInt(sp_origen.getValue().toString());
        
        info2.setText(null);
        
        String g[] = new String[destinos];
        
        if(fi>origenes){
            
            for(int i = origenes+1; i < fi; i++ ){
                
                g[0]="Demanda "+i;
                restricciones.addRow(g);
                
                String temp;
                
                for(int j = 0; j<restricciones.getColumnCount(); j++){
                    
                    temp = ""+restricciones.getValueAt(restricciones.getRowCount()-2, j);
                    
                    if(!temp.equals("null"))
                        restricciones.setValueAt(temp, restricciones.getRowCount()-1,j);
                    
                    restricciones.setValueAt("", restricciones.getRowCount()-2, j);
                }
                restricciones.setValueAt("Origen "+i, restricciones.getRowCount()-2, 0);
                restricciones.setValueAt("", restricciones.getRowCount()-1, restricciones.getColumnCount()-1);
            } 
            origenes = fi;
        }
        else if (fi < origenes){
            
            while(origenes != fi){
                restricciones.removeRow(origenes-1);
                origenes--;
            }
        }
        //aqui iria un checkbox de confirmacion con valor de null;
    }//GEN-LAST:event_sp_origenStateChanged

    private void bt_papActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_papActionPerformed
        
        if(minimo.CostoMinimo(tb_solucion)){
            
            lb_estado.setText("Estado: Proceso finalizado.");
            enviar();
            
            bt_pap.setEnabled(false);
        }
        
        tb_solucion.setValueAt("", 0, 0);
        txt_solucion.setText(""+calcularTotal());
    }//GEN-LAST:event_bt_papActionPerformed

    private void ck_origenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ck_origenActionPerformed
       
        info2.setBackground(new Color(240,240,240));
        info2.setText(null);
        
        if(ck_destino.isSelected())
            eliminarColumna();
        
        calcularDemandaOfertaTotal(tb_solucion,0,0);
        
        ck_destino.setSelected(false);
        
        if(!ck_origen.isSelected())
            eliminaFila();
        else
            agregarFila();
    }//GEN-LAST:event_ck_origenActionPerformed

    private void ck_destinoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ck_destinoActionPerformed
       
        info2.setBackground(new Color(240,240,240));
        info2.setText(null);
        
        if(ck_origen.isSelected())
            eliminaFila();
        
        calcularDemandaOfertaTotal(tb_solucion,0,0);
        
        ck_origen.setSelected(false);
        
        if(!ck_destino.isSelected())
            eliminarColumna();
        else
            agregarColumna();
    }//GEN-LAST:event_ck_destinoActionPerformed

    //Metodos propios ALV
    
    public boolean equilibrarSistema(){
        
        info2.setBackground(new Color(253,177,177));
        
        if(artificialColumna){
            calcularDemandaOfertaTotal(tb_restricciones,0,1);
        }
        
        else if (artificialFila){
            calcularDemandaOfertaTotal(tb_restricciones,1,0);
        }
        
        else calcularDemandaOfertaTotal(tb_restricciones,0,0);
        
        if(oferta==demanda){
            
            if(artificialFila){
                info2.setText("Planta artificial innecesaria");
                return false;
            }
            
            else if(artificialColumna){
                info2.setText("Destino artificial innecesario");
                return false;
            }
        }
        
        else if (oferta != demanda){
            
            if(oferta > demanda && artificialFila){
                
                info2.setText("Sistema mal equilibrado");
                return false;
            }
            else if(oferta < demanda && artificialColumna){
                info2.setText("Sistema mal equilibrado");
                return false;
            }
        }
        
        if(!artificialColumna && !artificialFila){
            
            if(oferta < demanda){
                info2.setText("La oferta no satisface la demanda");
                return false;
            }
            
            else if(oferta>demanda){
                info2.setText("La demanda no satisface la oferta");
                return false;
            }
        }
        
        info2.setBackground(new Color(240,240,240));
        return false;
    }
    
    void eliminaFila(){
        
        artificialFila = false;
        restricciones.removeRow(restricciones.getRowCount()-2);
    }
    
    void agregarColumna(){
        
        artificialColumna = true;
        restricciones.addColumn("Oferta");
        renombrarColumna("Ficticio", tb_restricciones);
        trasladarDatos(tb_restricciones);
        restricciones.setValueAt((oferta-demanda), restricciones.getRowCount()-1, restricciones.getColumnCount()-2);
        
    }
    
    void eliminarColumna(){
        
        artificialColumna = false;
        String temp[][] = extraer(tb_restricciones,1);
        new CrearTablaTransporte().CrearTablaRestricciones(destinos, origenes, tb_restricciones, 0);
        for(int i = 0; i<temp.length; i++){
            for(int j = 1; j <temp[i].length; j++){
                restricciones.setValueAt(temp[i][j], i, j);
            }
        }
    }
    
    void agregarFila(){
        
        artificialFila = true;
        String temp;
        restricciones.addRow(new String[]{"Demanda"});
        int p = restricciones.getRowCount();
        
        for(int i = 0; i<restricciones.getColumnCount(); i++){
            
            temp = ""+restricciones.getValueAt(p-2, i);
            if(String.valueOf(restricciones.getValueAt(p-2,i)).equalsIgnoreCase("null"))
                temp="";
            
            restricciones.setValueAt(temp, p-1, i);
            
            if(i==0)
                restricciones.setValueAt("Ficticio", p-2, i);
            
            else
                restricciones.setValueAt("0", p-2, i);
        }
        
        restricciones.setValueAt((demanda-oferta), restricciones.getRowCount()-2, restricciones.getColumnCount()-1);
    }
    
    public void renombrarColumna(String nom, JTable t){
        
        JTableHeader th = t.getTableHeader();
        TableColumnModel tcm = th.getColumnModel();
        TableColumn tc = tcm.getColumn(t.getColumnCount()-2);
        tc.setHeaderValue("Ficticio");
        th.repaint();
    }
    
    public void trasladarDatos(JTable t){
        
        for(int f = 0; f < t.getRowCount()-1; f++){
            
            t.setValueAt(t.getValueAt(f, t.getColumnCount()-2), f, t.getColumnCount()-1);
            t.setValueAt(0, f, t.getColumnCount()-2);
        }
    }
    
    public String[][] extraer(JTable t, int c){
        
        String temp[][] = new String[t.getRowCount()][t.getColumnCount()-c];
        
        for(int i = 0; i < t.getRowCount(); i++){
            
            for(int j = 0; j < t.getColumnCount()-2; j++){
                
                if(String.valueOf(t.getValueAt(i, j)).equalsIgnoreCase("null"))
                    temp[i][j]="";
                else temp[i][j]=""+t.getValueAt(i, j);
            }
        }
        
        int p = t.getColumnCount();
        
        for(int i = 0; i<t.getRowCount()-1;i++){
            
            if(String.valueOf(t.getValueAt(i, p-1)).equalsIgnoreCase("null"))
                temp[i][p-c-1]="";
            else temp[i][p-c-1]=""+t.getValueAt(i, p-1);
        }
        
        return temp;
    }
    
    public void calcularDemandaOfertaTotal(JTable tb_solucion, int extraf, int extrac){
        
        demanda = 0;
        oferta = 0;
        
        for(int i =1; i < tb_restricciones.getColumnCount()-1-extrac; i++){
            
            try{
                demanda = demanda + Double.parseDouble(""+tb_restricciones.getValueAt(tb_restricciones.getRowCount()-1,i));
            }
            catch(Exception e){}
        }
        
        for (int i=0; i < tb_restricciones.getRowCount()-1-extraf; i++){
            
            try{
                oferta = oferta+Double.parseDouble(""+tb_restricciones.getValueAt(i, tb_restricciones.getColumnCount()-1));
            }
            catch(Exception r){}
        }
    }
    
    private boolean isNumeric(JTable t){
        
        for (int i = 0; i < t.getRowCount(); i++){
            for(int j = 1; j < t.getColumnCount(); j++){
                
                try{
                
                if(i==t.getRowCount()-1 && j==t.getColumnCount()-1)
                    return true;
                
                if(i==t.getRowCount()-1 || j==t.getColumnCount()-1){
                    Double.parseDouble(""+t.getValueAt(i, j));
                }
                else if(!"-".equals(""+t.getValueAt(i, j))){
                    Double.parseDouble(""+t.getValueAt(i, j));
                }
                }
                catch(NumberFormatException nfe){
                
                    info2.setText("Dato incorrecto ' "+t.getValueAt(i, j)+" '");
                    info2.setBackground(new Color(253,177,177));
                    return false;
                }   
            }
        }
        return true;
    }
    
    public void enviar(){
        
        Object[] cabeza = {"Origen","Destino","Material","Precio","Subtotal"};
        
        DefaultTableModel mode = new DefaultTableModel(cabeza,0){
        
            public boolean isCellEditable(int row, int column){
                return false;
            }
        };
        
        String row[] = new String[5];
            for(int i=0; i<datos.length; i++){
                for(int j = 0; j<datos[0].length;j++){
                    
                    if(datos[i][j].getCantidad()>0D){
                        
                        row[0]=""+(i+1);
                        row[1]=""+(j+1);
                        row[2]=""+datos[i][j].getCantidad();
                        row[3]=""+datos[i][j].getPrecio();
                        row[4]=""+datos[i][j].getCantidad()*Double.parseDouble(datos[i][j].getPrecio());
                        mode.addRow(row);
                        
                    }
                }
            }
            
            tb_resultados.setModel(mode);
    }
    
    double calcularTotal(){
        
        double total = 0;
        
        for(int i = 0; i < datos.length; i++){
            
            for(int j = 0; j < datos[i].length; j++){
                if(!datos[i][j].getPrecio().equalsIgnoreCase("-")){
                    total =total + Double.parseDouble(datos[i][j].getPrecio())*datos[i][j].getCantidad();
                }
            }
        }
        
        return total;
    }
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CostoMinimoUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CostoMinimoUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CostoMinimoUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CostoMinimoUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CostoMinimoUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuBar BarraMenu;
    private javax.swing.JButton bt_igualar;
    private javax.swing.JButton bt_ok;
    private javax.swing.JButton bt_pap;
    private javax.swing.JButton bt_rellenar;
    private javax.swing.JButton bt_resolver;
    private javax.swing.JButton bt_salir;
    private javax.swing.JButton bt_terminar;
    private javax.swing.JCheckBox ck_destino;
    private javax.swing.JCheckBox ck_origen;
    private javax.swing.JLabel info2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JLabel lb_estado;
    private javax.swing.JLabel lb_solucion;
    private javax.swing.JLabel lb_titulo;
    private javax.swing.JPanel pn_bck;
    private javax.swing.JSpinner sp_destino;
    private javax.swing.JSpinner sp_origen;
    private javax.swing.JTable tb_restricciones;
    private javax.swing.JTable tb_resultados;
    private javax.swing.JTable tb_solucion;
    private javax.swing.JTextField txt_solucion;
    private javax.swing.JFrame vRelleno;
    // End of variables declaration//GEN-END:variables
}
